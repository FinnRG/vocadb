@using VocaDb.Web.Helpers
@using VocaDb.Web.Models.Shared.Partials.Knockout
@using VocaDb.Web.Models.Shared.Partials.Shared
@using Res = ViewRes.Song.CreateStrings
@using VocaDb.Model.Resources.Views
@model VocaDb.Web.Models.Song.Create

@{
	PageProperties.Title = Res.SubmitSong;
 ViewBag.Parents = new[] {
		Html.ActionLink(ViewRes.SharedStrings.Songs, "Index", "Search", UrlMapper.Search.Songs(), null)
	};
}

<form action="@Url.Action("Create", "Song")" method="POST" data-bind="submit: submit">

	<partial name="Partials/Shared/_ValidationSummaryDiv" model="@(new ValidationSummaryDivViewModel(Res.UnableToCreateSong))" />

	<div class="row-fluid">
		<div class="span9 well well-transparent">

			<div class="pull-right">
				<partial name="Partials/Shared/_AjaxLoader" model="@(new AjaxLoaderViewModel("pvLoader"))" />
			</div>

			<div class="alert alert-info">
				@Html.Raw(SongRes.NewSongNote)
			</div>

			<div class="alert alert-info">
				@Html.Raw(SongRes.WithoutVocalNote)
			</div>

			<!--
				<div class="alert alert-info">
					<p>@Res.NoArtistsToName</p>
					<p>@Res.NameHelp</p>
					<p>@Res.ArtistHelp</p>
				</div>
			-->

			<fieldset>
				
				<legend>@Res.Media</legend>

				<div class="alert alert-danger" data-bind="visible: isDuplicatePV" style="display:none">
						@Res.DuplicatePV
				</div>

				<div class="editor-label">
					@Html.LabelFor(m => m.PVUrl)
				</div>

				<div class="editor-field">
					@Html.TextBoxForKnockout(m => m.PVUrl, "value: pv1, event: { change: checkDuplicatesAndPV }", cssClass: "span8 input-field", maxLength: 255, size: 30, placeholder: Res.OriginalPVNote)
					@Html.ValidationMessageFor(m => m.PVUrl)
				</div>

				<div class="editor-label">
					@Html.LabelFor(m => m.ReprintPVUrl)
				</div>

				<div class="editor-field">
					@Html.TextBoxForKnockout(m => m.ReprintPVUrl, "value: pv2, event: { change: checkDuplicates }", cssClass: "span8 input-field", maxLength: 255, size: 30)
					@Html.ValidationMessageFor(m => m.ReprintPVUrl)
				</div>

				<div class="alert alert-info alert-small">
					@Html.Raw(Res.AddPVInfo)
				</div>

			</fieldset>

			<div class="editor-field">
				
				<fieldset>
					<legend>
						@Res.Name
						<partial name="Partials/Shared/_RequiredField" />
					</legend>

					<div class="alert alert-info">
						@Html.Raw(Res.AddArtistInfo)
					</div>

					@Html.ValidationMessage("Names")
					<table>
						<tr>
							<td class="formLabel">
								@Html.LabelFor(m => m.NameOriginal)
							</td>
							<td class="input-field">
								<!-- change event is fired when the field is focused out AND content has changed -->
								@Html.TextBoxForKnockout(m => m.NameOriginal, "textInput: nameOriginal, event: { change: checkDuplicates }", cssClass: "span12 input-field", maxLength: 255, size: 40, placeholder: Res.NonEnglishNote)
							</td>
						</tr>

						<tr>
							<td class="formLabel">
								<a style="text-decoration: underline dashed">
									@Html.LabelFor(m => m.NameRomaji, htmlAttributes: new
									{
										onclick = "window.open('https://wiki.vocadb.net/SiteSettings/Wiki/Index/20?title=Romanization-walkthrough')",
										title = ViewRes.EntryCreateStrings.LearnRomanization
									})
								</a>
							</td>
							<td>
								@Html.TextBoxForKnockout(m => m.NameRomaji, "textInput: nameRomaji, event: { change: checkDuplicates }", cssClass: "span12 input-field", maxLength: 255, size: 40)
							</td>
						</tr>

						<tr>
							<td class="formLabel">
								@Html.LabelFor(m => m.NameEnglish)
							</td>
							<td>
								@Html.TextBoxForKnockout(m => m.NameEnglish, "textInput: nameEnglish, event: { change: checkDuplicates }", cssClass: "span12 input-field", maxLength: 255, size: 40, placeholder: Res.EnglishNote)
							</td>
						</tr>
					</table>
				</fieldset>
			</div>

			<fieldset>
				
				<legend>
					@Res.SongType
				</legend>
				<div class="editor-field">
					@Html.DropdownForKnockout(m => m.SongType, ViewHelper.CreateSongTypesList(null), "value: songType")
				</div>
				<div class="alert alert-info js-cloak" visible="{{songTypeInfo}}" data-bind="show" style="padding-bottom: 0">
					<span data-bind="markdown: songTypeInfo, maxLength: 500"></span>
				</div>
			</fieldset>


			<!-- ko if: canHaveOriginalVersion -->
			<fieldset>
				
				<legend>@ViewRes.Song.EditStrings.BaOriginalVersion</legend>
				<div class="editor-field">
					<div style="display: inline-block;" class="input-append">
						<partial name="Partials/Knockout/_LockingAutoComplete" model="@(new LockingAutoCompleteViewModel("songAutoComplete", "originalVersionSearchParams", textBinding: "originalVersion.name", valBinding: "originalVersion.id"))" />
					</div>
					
					<div data-bind="visible: originalVersion.isEmpty() && originalSongSuggestions().length" style="display: none;">
						<h4>@Res.OriginalSuggestionsTitle</h4>
						<table data-bind="foreach: originalSongSuggestions">
							<tr>
								<td>
									<a data-bind="text: entry.name.displayName, attr: { href: app.EntryUrlMapper.details_entry(entry) }, entryToolTip: entry" href="#" target="_blank"></a>
									(<span data-bind="text: entry.entryTypeName"></span>)
									<div data-bind="if: entry.artistString">
										<span data-bind="text: entry.artistString"></span>
									</div>
								</td>
								<td style="max-width: 150px;">
									<a class="textLink acceptLink" href="#" data-bind="click: $parent.selectOriginal">@Res.Select</a>
								</td>
							</tr>
						</table>
					</div>
					
					@Html.HiddenForKnockout(m => m.OriginalVersion, "value: ko.toJSON(originalVersion)")
				</div>
				
			</fieldset>
			<!-- /ko -->

			<fieldset>
				
				<legend>
					@Res.ArtistsInfo
					<partial name="Partials/Shared/_RequiredField" />
				</legend>
				<p>@Res.ArtistDesc</p>
				
				<div class="editor-field">
					@Html.ValidationMessage("Artists")

					<table data-bind="foreach: artists">
						<tbody>
							<tr>
								<td>
									<a data-bind="attr: { href: app.EntryUrlMapper.details('Artist', id) }, text: name, artistToolTip: id"></a>
									<span data-bind="artistTypeLabel: artistType, typeLabelShowTitle: true"></span>
								</td>
								<td>
									<a data-bind="click: $parent.removeArtist" href="#" class="textLink removeLink">@ViewRes.SharedStrings.Remove</a>
								</td>
							</tr>
						</tbody>
					</table>

					<input type="text" data-bind="artistAutoComplete: artistSearchParams" maxlength="128" placeholder="@ViewRes.SharedStrings.Search" class="span8 input-field" />
					<input type="hidden" name="artists" data-bind="value: ko.toJSON(artistsWithRoles)" />

				</div>

				<div class="alert alert-info alert-small" style="text-decoration: underline dashed;" data-toggle="tooltip" title="@Res.MissingArtistExplanation">
					@Html.Raw(Res.MissingArtistInfo)
				</div>

			</fieldset>

			<br />
			<p>
				<label class="checkbox">
					@Html.CheckBoxFor(m => m.Draft)
					@Res.Draft
				</label>
			</p>

			<br />
			<button type="submit" data-bind="disable: submitting" class="btn btn-primary">@ViewRes.SharedStrings.Save</button>

		</div>

		<div class="span3 vcenter">

			<partial name="KnockoutPartials/_DuplicateEntriesMessage" />
			<partial name="KnockoutPartials/_CoverArtistMessage" />

		</div>

	</div>

</form>

@section BodyScripts {

	<remikus path="/bundles/shared/edit.js" />
	<remikus path="/bundles/Song/Create.js" />
	<script type="text/javascript">

		$(document).ready(function () {
			ko.punches.enableAll();
			var repoFactory = new app.RepositoryFactory(new app.UrlMapper('@RootPath'), @LanguagePreferenceInt);
			var repo = repoFactory.songRepository();
			var artistRepo = repoFactory.artistRepository();
			var tagRepo = repoFactory.tagRepository();
			var json = @ToJS(Model);
			ko.applyBindings(new app.SongCreateViewModel(repo, artistRepo, tagRepo, json));

			$("#pvLoader")
				.ajaxStart(function() { $(this).show(); })
				.ajaxStop(function () { $(this).hide(); });

		});

		$(document).ready(function () {
			$('[data-toggle="tooltip"]').tooltip();
		});

	</script>

}
